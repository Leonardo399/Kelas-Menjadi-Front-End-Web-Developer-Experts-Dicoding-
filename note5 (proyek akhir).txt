# Proyek Akhir #f00

## Kriteria Submission
! Fitur yang harus ada pada aplikasi:

1. Integration Test
Syarat:
  - Menerapkan integration test untuk fungsi menyukai dan batal menyukai restoran.

2. End to End Test
Syarat:
  1. Menerapkan End to End Test dengan skenario:
    - Menyukai salah satu restoran.
    - Batal menyukai restoran tersebut.

3. Image Optimization
Syarat:
  1. Melakukan kompresi terhadap gambar hero yang digunakan. Ukuran gambar harus di bawah 200kb.
  2. Menerapkan teknik image responsive pada gambar hero. Resolusi gambar pada layar seluler dan desktop harus berbeda.
  3. Menerapkan teknik lazy loading pada gambar daftar restoran yang ditampilkan.

4. Bundle Optimization
Syarat:
  1. Memasang bundle analyzer pada proyek submission.
  2. Gunakan teknik Code Splitting untuk memisahkan vendor code dari kode asli yang Anda tuliskan.

5. Pertahankan syarat yang ada pada submission sebelumnya. Seperti penerapan PWA, responsibilitas tampilan,  aksesibilitas pada website dan sebagainya.


## Saran Submission
! Submission Anda akan dinilai oleh reviewer dengan skala 1-5 berdasarkan dari parameter yang ada.

! Anda dapat menerapkan beberapa saran di bawah ini untuk mendapatkan nilai tinggi, berikut sarannya:

  - Menuliskan test case secara lengkap, mulai dari kasus positif hingga kasus negatif. Pastikan test case yang dijalankan berhasil.
  - Menerapkan End to End test pada skenario lain di luar yang sudah ditentukan. Pastikan test case yang dijalankan berhasil.
    Contoh: bila aplikasi terdapat fitur customer review, lakukan End to End test pada fitur tersebut.
  - Menerapkan optimasi lain di luar dari optimasi yang menjadi persyaratan. Contoh, Anda bisa menerapkan pendekatan skeleton UI, minify/uglify CSS.
  - Mendeploy hasil web app yang Anda kerjakan ke third-party hosting. Seperti Firebase Hosting, Netlify, Heroku, Github Pages, atau yang lainnya. Serta, memperhatikan matrik Web Vitals dengan nilai:
    - FCP < 2.5 detik
    - FID/TBT < 100 ms
    - CLS < 0.1

  Note: Lampirkan URL dari laman web yang sudah di hosting pada Student Notes.  

## Detail penilaian submission:

Bintang 1 : Semua ketentuan terpenuhi, namun kode dan tampilan masih perlu banyak diperbaiki atau terindikasi melakukan plagiat.
Bintang 2 : Semua ketentuan terpenuhi, namun kode dan tampilan masih perlu banyak diperbaiki.
Bintang 3 : Semua ketentuan terpenuhi namun hanya mengikuti seperti apa yang ada pada latihan.
Bintang 4 : Semua ketentuan terpenuhi, mempunyai arsitektur yang baik sehingga meminimalisir boilerplate, mempunyai tampilan yang baik, serta menerapkan salah satu saran yang diberikan.
Bintang 5 : Semua ketentuan terpenuhi, mempunyai arsitektur yang baik sehingga meminimalisir boilerplate, mempunyai tampilan yang baik, serta menerapkan semua saran yang diberikan.




##-> Pengerjaan Proyek

! Skenario Menyukai Film:
  1. Film belum disukai.
  2. Widget untuk menyukai film ditampilkan
  3. Widget menyukai film ditekan oleh pengguna.
  4. Film ditambahkan ke daftar film yang disukai:
    -> Ternyata film sudah disukai:
      - Tidak perlu menyimpan kembali.
    -> Data film tidak memiliki ID:
      - Sistem tidak memproses penyimpanan.
      - SIstem tidak gagal.

! Skenario Batal Menyukai Film:
  1. Film sudah disukai.
  2. Widget untuk batal menyukai film ditampilkan.
  3. Widget pembatalan ditekan oleh pengguna.
  4. Film dihapus dari daftar film yang disukai:
    - Ternyata film tidak ada dalam daftar film yang disukai.




<-##


# Saran setelah selesai project 
  - Jangan lupa untuk memeriksa hasil review kode yang diberikan pada table Submitted App.
  - Good Job! End 2 End test berjalan dengan baik.
  - Kamu bisa tambahkan contract test untuk memastikan bahwa architecture yang Kamu bangun tidak memiliki ketergantungan terhadap suatu object atau API tertentu. Pada kasus project ini, contract test dapat diterapkan pada networking, ataupun local database.
  - Kamu juga bisa memanfaatkan plugin workbox-webpack-plugin untuk membuat service worker menggunakan workbox dengan webpack. Referensi https://developers.google.com/web/tools/workbox/guides/codelabs/webpack
  - Sebaiknya tampilkan juga informasi atau keterangan proses add review tidak dapat dilakukan dalam mode offline. Kamu bisa menggunakan window.navigator.onLine untuk mengecek koneksi dari user. Referensi https://developer.mozilla.org/en-US/docs/Web/API/NavigatorOnLine/onLine
  - Jika Kamu menyukai Web Components, cobalah LitElement yang merupakan abstraksi dari Web Component dengan kompatibilitas yang lebih luas. Penerapan Web Component akan lebih cepat, fun, dan lebih deklaratif.
  - Kini Kamu sudah bisa membuat Web App modern dengan tampilan yang responsif, dapat digunakan oleh seluruh kalangan, progresif, testable, dan memiliki performa yang cepat. Saatnya deploy aplikasimu agar dapat dicoba oleh banyak orang, dan tentunya menjadi portofolio baru buat kamu. Kamu bisa gunakan Netlify untuk mendeploy aplikasimu. Selain gratis, Netlify mendukung Continous Deployment sehingga proses deploy bisa diintegrasikan dengan repository Github.
  - Penilaian web vitals secara lokal dengan lighthouse terkadang memberikan hasil yang berbeda tergantung dari koneksi internet dan spesifikasi komputer yang digunakan. Oleh karena itu, jika kamu sudah menghosting web kamu, maka kamu dapat menggunakan PageSpeed Insights agar penilaian web vitals kamu lebih akurat. Kamu dapat mengunjungi tautan berikut : https://developers.google.com/speed/pagespeed/insights/


!! NOTES !! 
